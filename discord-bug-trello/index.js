const Discord = require('discord.js');
const Trello = require("trello");
const mongoose = require("mongoose");
const BugScheme = require("./models/bug");
mongoose.connect("mongodb://localhost/mhbugs", {
  useNewUrlParser: true,
  useUnifiedTopology: true
});

const {prefix, botToken, bugReportsTrelloID, applicationKey, userToken} = require("./config.json");
const client = new Discord.Client();
const trello = new Trello(applicationKey, userToken);
var embed = new Discord.MessageEmbed()

var BugsChannel = "ID" // ID –∫–∞–Ω–∞–ª–∞ –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –±–∞–≥–∏
var ApprovoredRoleID = 'ID' // ID –†–æ–ª–∏ –∫–æ—Ç–æ—Ä–∞—è –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –∫–æ–º–∞–Ω–¥–∞–º


client.on('ready', () => {
  console.log('MH Bugs loaded!');
});

client.on('error', (_) => {
    console.log(_);
})


client.on('message', async (message, member, channel) => {

  if (!message.content.startsWith(prefix) || message.author.bot) return;
  var args = message.content.slice(prefix.length).split(/ +/);
  const command = args.shift().toLowerCase();
  args = args.join(" ");
  let perms = message.member.permissions;

  if (command === 'accept') {
    const user = await message.guild.members.cache.get(message.author.id)
    if (!user.roles.cache.get(ApprovoredRoleID)) return message.reply('–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –æ—Ö–æ—Ç–Ω–∏–∫–∞–º –∑–∞ –±–∞–≥–∞–º–∏')
    if (!args[0]) return message.reply('–£–∫–∞–∂–∏—Ç–µ Bug-ID')
    var SelectBug = await BugScheme.findOne({ id: args[0] });
    if (!SelectBug) return message.reply('–Ø –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–∞.')
    if (SelectBug.reportStatus != 'none') return message.reply('–≠—Ç–æ—Ç –æ—Ç—á–µ—Ç —É–∂–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω.')
    var bug = client.channels.cache.get(BugsChannel)
    bug.messages.fetch({around: SelectBug.messageid, limit: 1})
      .then(msg => {
        const fetchedMsg = msg.first();
        fetchedMsg.edit(`**‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ**\n<@${SelectBug.owner}> —Å–æ–æ–±—â–∏–ª\n\n**–ù–∞–∑–≤–∞–Ω–∏–µ:** ${SelectBug.title}\n**–û–ø–∏—Å–∞–Ω–∏–µ:** ${SelectBug.description}\n\n–ü—Ä–æ–≤–µ—Ä–∏–ª ${message.author} <:yes:831120978649415751>\nID –æ—Ç—á–µ—Ç–∞: **${SelectBug.id}**`);
    });
    SelectBug.reportStatus = 'accept'
    SelectBug.save()

    trello.addCard(SelectBug.title, SelectBug.description, bugReportsTrelloID, function(error, card) {
      console.log('send to trello')
    });

    let tosender = new Discord.MessageEmbed()
    .setDescription(`–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é <@${SelectBug.owner}>, —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–∞ **#${SelectBug.id}** –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ **–û–¥–æ–±—Ä–µ–Ω –∏ –ø–µ—Ä–µ–¥–∞–Ω —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º**\n–û—Ç—á–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏–ª <@${message.author.id}>`)
    .setColor("#7799fb")
    .setTimestamp()

    client.users.cache.get(SelectBug.owner).send(tosender);

    message.delete();

  }

  if (command === 'deny') {

    const user = await message.guild.members.cache.get(message.author.id)
    if (!user.roles.cache.get(ApprovoredRoleID)) return message.reply('–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –æ—Ö–æ—Ç–Ω–∏–∫–∞–º –∑–∞ –±–∞–≥–∞–º–∏')
    if (!args[0]) return message.reply('–£–∫–∞–∂–∏—Ç–µ Bug-ID')
    var SelectBug = await BugScheme.findOne({ id: args[0] });
    if (!SelectBug) return message.reply('–Ø –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–∞.')
    if (SelectBug.reportStatus != 'none') return message.reply('–≠—Ç–æ—Ç –æ—Ç—á–µ—Ç —É–∂–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω.')
    var bug = client.channels.cache.get(BugsChannel)
    bug.messages.fetch({around: SelectBug.messageid, limit: 1})
      .then(msg => {
        const fetchedMsg = msg.first();
        fetchedMsg.edit(`**‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ**\n<@${SelectBug.owner}> —Å–æ–æ–±—â–∏–ª\n\n**–ù–∞–∑–≤–∞–Ω–∏–µ:** ${SelectBug.title}\n**–û–ø–∏—Å–∞–Ω–∏–µ:** ${SelectBug.description}\n\n–ü—Ä–æ–≤–µ—Ä–∏–ª ${message.author} <:no:831120978289360936>\nID –æ—Ç—á–µ—Ç–∞: **${SelectBug.id}**`);
    });
    SelectBug.reportStatus = 'deny'
    SelectBug.save()

    let tosender = new Discord.MessageEmbed()
    .setDescription(`–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é <@${SelectBug.owner}>, —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç–∞ **#${SelectBug.id}** –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ **–û—Ç–∫–∞–∑–∞–Ω**\n–û—Ç—á–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏–ª <@${message.author.id}>`)
    .setColor("#7799fb")
    .setTimestamp()

    client.users.cache.get(SelectBug.owner).send(tosender);

    message.delete();
  }

  if (command === 'bug' && message.channel.name == "ü¶ã‚îä–∫–æ–º–∞–Ω–¥—ã-–±–æ—Ç—É") {
      message.delete();
      message.reply('**–ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–≥–∞?**')
      const collector = message.channel.createMessageCollector(
        m => m.author.id === message.author.id,
        {
          time: 120000 // 2 –º–∏–Ω—É—Ç—ã
        }
      );
      var step = 0
      var bugtitle = ""
      var bugdesc = ""
      var mgid = 0
      collector.on("collect", async msg => {
        if (step == 0) {
          bugtitle = msg.content
          message.reply('**–û–ø–∏—Å–∞–Ω–∏–µ –±–∞–≥–∞?**')
          step++
        } else if (step == 1) {
          bugdesc = msg.content
          var ReportCount = await BugScheme.countDocuments() + 1
          client.channels.cache.get(BugsChannel).send(`**‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ**\n${message.author} —Å–æ–æ–±—â–∏–ª\n\n**–ù–∞–∑–≤–∞–Ω–∏–µ:** ${bugtitle}\n**–û–ø–∏—Å–∞–Ω–∏–µ:** ${bugdesc}\n\n–í—ã—à–µ—É–∫–∞–∑–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω.\nID –æ—Ç—á–µ—Ç–∞: **${ReportCount}**`).then(async value => {
            var Report = await BugScheme.findOne({ id: ReportCount });
            if (!Report) {
              const newReport = new BugScheme({
              id: ReportCount,
              title: bugtitle,
              description: bugdesc,
              owner: message.author.id,
              messageid: value.id,
            });
            await newReport.save().catch(()=>{});
            }

          })

          message.reply(`–í–∞—à –±–∞–≥ –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ! –í—ã –±—É–¥–µ—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã, –∫–æ–≥–¥–∞ —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –æ—Ç—á–µ—Ç–∞ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω, –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ —Å–∏–¥–µ—Ç—å —Å–ª–æ–∂–∞ —Ä—É–∫–∏ –∏ –∂–¥–∞—Ç—å, –ø–æ–∫–∞ –û—Ö–æ—Ç–Ω–∏–∫–∏ –∑–∞ –±–∞–≥–∞–º–∏ —Å–¥–µ–ª–∞—é—Ç —Å–≤–æ—é –º–∞–≥–∏—é!`)
          return collector.stop();
        }
        
      });

      collector.on("end", (_, reason) => {
        if (reason === "time") {
          return message.reply('–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏–µ –≤—ã—à–ª–æ')
        }
      });
    }
});

client.login(botToken);
